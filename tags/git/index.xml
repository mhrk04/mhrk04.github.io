<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Git on Mhaziqrk Blog</title><link>https://www.mhaziqrk.uk/tags/git/</link><description>Recent content in Git on Mhaziqrk Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 30 Sep 2023 08:46:02 +0800</lastBuildDate><atom:link href="https://www.mhaziqrk.uk/tags/git/index.xml" rel="self" type="application/rss+xml"/><item><title>Mastering Git Commands: Part 1</title><link>https://www.mhaziqrk.uk/posts/2023/sept/git/masteringgitcommandsadevelopersguide/</link><pubDate>Mon, 25 Sep 2023 00:34:30 +0800</pubDate><guid>https://www.mhaziqrk.uk/posts/2023/sept/git/masteringgitcommandsadevelopersguide/</guid><description>Git is a powerful version control system that every developer should have in their toolkit. Whether you are working on a solo project or collaborating with a team, Git helps you track changes, manage versions, and collaborate seamlessly. In this guide, we&amp;rsquo;ll explore some essential Git commands that will help you become a Git pro.
Git Download What is Git? Git is a distributed version control system that was created by Linus Torvalds in 2005.</description></item><item><title>Mastering Git Commands: Part 2</title><link>https://www.mhaziqrk.uk/posts/2023/sept/git/gitcommand2/</link><pubDate>Mon, 25 Sep 2023 08:20:12 +0800</pubDate><guid>https://www.mhaziqrk.uk/posts/2023/sept/git/gitcommand2/</guid><description>In the first part of our Git commands guide , we covered the basics of Git, from initializing a repository to pushing and pulling changes from remotes. Now, let&amp;rsquo;s dive into some more advanced Git commands and concepts that will help you take your version control skills to the next level.
Git Branching Strategies Branching is a fundamental concept in Git, and understanding branching strategies can greatly improve your workflow, especially when collaborating with others.</description></item><item><title>Mastering Git Commands: Part 3</title><link>https://www.mhaziqrk.uk/posts/2023/sept/git/gitcommand3/</link><pubDate>Mon, 25 Sep 2023 10:04:47 +0800</pubDate><guid>https://www.mhaziqrk.uk/posts/2023/sept/git/gitcommand3/</guid><description>Welcome back to our series on advanced Git commands. In this installment, we&amp;rsquo;ll explore even more powerful Git commands and techniques that can enhance your version control skills and streamline your development workflow.
Git Submodules Git submodules allow you to include other Git repositories within your own repository as subdirectories. This is particularly useful when you want to incorporate external libraries or dependencies into your project.
Here&amp;rsquo;s how to add a submodule to your repository:</description></item><item><title>Mastering Git Commands: Part 4</title><link>https://www.mhaziqrk.uk/posts/2023/sept/git/gitcommand4/</link><pubDate>Fri, 29 Sep 2023 15:21:34 +0000</pubDate><guid>https://www.mhaziqrk.uk/posts/2023/sept/git/gitcommand4/</guid><description>Welcome to the fourth and final installment of our series on advanced Git commands. In this part, we&amp;rsquo;ll explore additional Git commands and techniques that can further enhance your Git proficiency and help you become a Git master.
Git Revert While git reset can be used to undo commits, it can be a risky operation, especially in shared repositories. git revert is a safer alternative that creates a new commit to undo the changes introduced by a previous commit.</description></item><item><title>Mastering Git Commands: Part 5</title><link>https://www.mhaziqrk.uk/posts/2023/sept/git/gitcommand5/</link><pubDate>Sat, 30 Sep 2023 06:09:55 +0800</pubDate><guid>https://www.mhaziqrk.uk/posts/2023/sept/git/gitcommand5/</guid><description>Welcome to the fifth and final installment of our series on advanced Git commands. In this part, we&amp;rsquo;ll dive even deeper into Git&amp;rsquo;s capabilities, exploring some lesser-known but highly useful commands and techniques.
Git Bisect Automated While we previously covered the git bisect command for manually finding the commit that introduced a bug, Git also provides an automated way to perform a bisect. You can define a script or command that returns whether a specific commit is good or bad, and Git will automatically search for the commit that introduced the issue.</description></item><item><title>Mastering Git Commands: Part 6</title><link>https://www.mhaziqrk.uk/posts/2023/sept/git/gitcommand6/</link><pubDate>Sat, 30 Sep 2023 08:46:02 +0800</pubDate><guid>https://www.mhaziqrk.uk/posts/2023/sept/git/gitcommand6/</guid><description>In this continuation of our series on advanced Git commands, we&amp;rsquo;ll explore some additional techniques and commands that can further enhance your Git proficiency.
Git Stash Pop In addition to git stash apply, you can use git stash pop to apply the most recent stash and remove it from the stash list in a single step. This can help you streamline your workflow when temporarily saving changes.
Apply and remove the most recent stash:</description></item></channel></rss>